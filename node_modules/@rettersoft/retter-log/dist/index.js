"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const aws_sdk_1 = __importDefault(require("aws-sdk"));
const https_1 = __importDefault(require("https"));
const { RETTERLOG_KINESIS } = process.env;
class RetterLog {
    /**
     * Logs the request to the stream.
     *
     * @param request - The request that is going to be logged
     * @param response - The response of the request that is going to be logged
     * @param tag - The type of the request
     * @param host - The host of the log
     * @param [endpoint] - The endpoint of the log
     * @returns The given response
     */
    static async LogRequest(request, response, tag, host, endpoint) {
        try {
            if (!RETTERLOG_KINESIS) {
                console.log("Please specify RETTERLOG_KINESIS as environment variable");
            }
            else {
                await RetterLog.kinesis.putRecord({
                    StreamName: RETTERLOG_KINESIS,
                    PartitionKey: Date.now().toString(),
                    Data: JSON.stringify({
                        request,
                        response,
                        tag,
                        host,
                        endpoint
                    })
                }).promise();
            }
            return response;
        }
        catch (e) {
            console.warn(e);
            return response;
        }
    }
}
exports.default = RetterLog;
RetterLog.kinesis = new aws_sdk_1.default.Kinesis({
    maxRetries: 6,
    httpOptions: {
        agent: new https_1.default.Agent({
            maxSockets: Infinity,
            keepAlive: true
        }),
        timeout: 5000,
        connectTimeout: 5000
    }
});
